plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "com.bmuschko.docker-spring-boot-application" version "8.0.0"
}

group = 'icu.cyclone'
version = '0.0.3'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.5'
    implementation 'org.springframework.cloud:spring-cloud-dependencies:2021.0.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1'
    implementation 'com.h2database:h2:2.1.210'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.5'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner:3.1.1'
}

docker {
    springBootApplication {
        baseImage = 'openjdk:15-alpine'
        maintainer = 'alexcyclone "alex@cyclone.icu"'
        images = ['alexcyclone/ban-cleaner:0.0.3']
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    launchScript()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('coverage')
    }
}